CREATE SCHEMA Formula1;
USE Formula1;

#T.D
CREATE TABLE TEMPORADAS(
Anio INT NOT NULL PRIMARY KEY
);

#T.D
CREATE TABLE CIRCUITOS(
IdCircuito INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
NombreCircuito VARCHAR(45),
PaisCircuito VARCHAR(45),
LongitudCircuito VARCHAR(45)
);
/*
#tabla intermedia, declaré que esta sea la primera tabla así ya existe el campo idvehiculo antes de hacer la relación con equipo y pilotos
*/

#T.H
CREATE TABLE GRANDES_PREMIOS(
IdGp INT NOT NULL AUTO_INCREMENT, #PK
Anio INT NOT NULL, #FK
IdCircuito INT NOT NULL, #FK
FechaInicioGp DATE NOT NULL,
FechaFinalGp DATE NOT NULL,
CantidadVueltas INT NOT NULL,
DistanciaCarrera VARCHAR(45),
GpSprint BOOLEAN DEFAULT 0, #FK si hay sprint en el gp o no.
DistanciaSprint VARCHAR(45),
PRIMARY KEY (IdGp),
CONSTRAINT FKAnioGp FOREIGN KEY (Anio) REFERENCES TEMPORADAS(Anio) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT FKCircuitoGp FOREIGN KEY (IdCircuito) REFERENCES CIRCUITOS(IdCircuito) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE UNIQUE INDEX GpSprintUnique on GRANDES_PREMIOS(GpSprint);

#T.D
CREATE TABLE EQUIPOS(
IdEquipo INT NOT NULL AUTO_INCREMENT, #PK
NombreEquipo VARCHAR(45) NOT NULL,
PaisEquipo VARCHAR(45) NOT NULL,
NombreDirectorEquipo VARCHAR(45) NOT NULL,
PuntosEquipo INT NOT NULL DEFAULT 0, ##Para pensar si tuvieramos desde 0
SalarioEquipo FLOAT NOT NULL DEFAULT 0,
PRIMARY KEY(IdEquipo)
);

#T.D
CREATE TABLE VEHICULOS(
IdVehiculo INT NOT NULL, #PK
IdEquipo INT NOT NULL, #FK
PRIMARY KEY(IdVehiculo),
CONSTRAINT FKIdVehiculoEquipo FOREIGN KEY (IdEquipo) REFERENCES EQUIPOS(IdEquipo) ON UPDATE CASCADE ON DELETE CASCADE
);

#T.D
CREATE TABLE PILOTOS(
IdPiloto INT NOT NULL AUTO_INCREMENT, #PK
NombrePiloto VARCHAR(45) NOT NULL,
PaisPiloto VARCHAR(45) NOT NULL,
EdadPiloto INT NOT NULL,
IdVehiculo INT NOT NULL, #FK
PuntosPiloto INT NOT NULL DEFAULT 0,
SalarioPiloto FLOAT NOT NULL DEFAULT 0,
PRIMARY KEY (IdPiloto),
CONSTRAINT FKIdPilotoVehiculo FOREIGN KEY (IdVehiculo) REFERENCES VEHICULOS(IdVehiculo) ON UPDATE CASCADE ON DELETE CASCADE
);

/*TENER EN CUENTA QUE LOS PUNTOS DE EQUIPO SE SUMAN POR PILOTO,
EN CASO DE QUE 2 PILOTOS DEL MISMO EQUIPO O SOLO 1 PILOTO DEL EQUIPO
TENGA LA VUELTA RAPIDA EN SPRINT Y LA VUELTA RAPIDA EN CARRERA,
SERÍAN 2 LOS PUNTOS OBTENIDOS POR EL EQUIPO, UNO POR EL SPRINT Y OTRO POR LA CARRERA.
LOS PUNTOS POR VUELTA RAPIDA SE SUMAN PARA EQUIPO Y PILOTO*/

#T.H
CREATE TABLE CLASIFICACION(
IdClasificacion INT NOT NULL UNIQUE AUTO_INCREMENT,
PosClasificacion INT NOT NULL,
IdGp INT NOT NULL,
IdVehiculo INT NOT NULL,
VueltaRapidaClasificacion VARCHAR(45),
VueltasCompletadasClasificacion INT NOT NULL,
PRIMARY KEY (IdClasificacion), #1° la auto-incremental por importancia.
CONSTRAINT FKIdGpClasificacion FOREIGN KEY (IdGp) REFERENCES GRANDES_PREMIOS(IdGp) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT FKIdVehiculoClasificacion FOREIGN KEY (IdVehiculo) REFERENCES VEHICULOS(IdVehiculo) ON UPDATE CASCADE ON DELETE CASCADE
);

#T.H
CREATE TABLE SPRINT(
GpSprint BOOLEAN DEFAULT 0,
IdSprint INT NOT NULL UNIQUE AUTO_INCREMENT, #PK
IdGp INT NOT NULL, #FK
PosSprint INT NOT NULL,
IdVehiculo INT NOT NULL, #FK
PosSalida INT NOT NULL, #FK posclasificacion en la que sale el piloto.
VueltasCompletadasSprint INT NOT NULL DEFAULT 0,
PuntosSprint INT NOT NULL DEFAULT 0,
PRIMARY KEY (IdSprint), #1° la auto-incremental por importancia.
CONSTRAINT FKGpSprint FOREIGN KEY (GpSprint) REFERENCES GRANDES_PREMIOS(GpSprint) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT FKIdGpSprint FOREIGN KEY (IdGp) REFERENCES GRANDES_PREMIOS(IdGp) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT FKIdVehiculoSprint FOREIGN KEY (IdVehiculo) REFERENCES VEHICULOS(IdVehiculo) ON UPDATE CASCADE ON DELETE CASCADE
);

#T.H
CREATE TABLE CARRERA(
IdCarrera INT NOT NULL UNIQUE AUTO_INCREMENT, #PK
#funcionpuntoscarrera para que distribuya los puntos por c/posición,
PosCarrera INT NOT NULL,
IdVehiculo INT NOT NULL, #FK
PosSalida INT NOT NULL, #FK posclasificacion en la que sale el piloto
VueltasCompletadasCarrera INT NOT NULL DEFAULT 0,
VoF_VueltaRapida BOOLEAN DEFAULT 0, #PK aquel piloto con vuelta rapida es = 1.
INDEX idx_VoF_VueltaRapida (VoF_VueltaRapida),
PuntosCarrera INT NOT NULL DEFAULT 0,
PRIMARY KEY (IdCarrera, VoF_VueltaRapida), #1° la auto-incremental por importancia.
CONSTRAINT FKIdVehiculoCarrera FOREIGN KEY (IdVehiculo) REFERENCES VEHICULOS(IdVehiculo) ON UPDATE CASCADE ON DELETE CASCADE
);
#VUELTA RAPIDA SE SUMA PARA EQUIPO Y PILOTO, SE 

CREATE TABLE VUELTA_RAPIDA_CARRERA(
IdVueltaRapidaCarrera INT NOT NULL UNIQUE PRIMARY KEY, #PK
VoF_VueltaRapida BOOLEAN DEFAULT 1, #FK
IdCarrera INT NOT NULL, #FK
IdVehiculo INT NOT NULL, # FK + 1 pto IDVehiculo para sumar puntos para Piloto y Equipo
VueltaRapidaCarrera VARCHAR(8),
VueltaNro INT NOT NULL,
PuntoVueltaRapidaCarrera INT NOT NULL DEFAULT 1,
CONSTRAINT FKIdCarrera FOREIGN KEY (IdCarrera) REFERENCES CARRERA(IdCarrera) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT FKIdVoF_VueltaRapida FOREIGN KEY (VoF_VueltaRapida) REFERENCES CARRERA(VoF_VueltaRapida) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT FKIdVehiculoVueltaRapidaCarrera FOREIGN KEY (IdVehiculo) REFERENCES VEHICULOS(IdVehiculo) ON UPDATE CASCADE ON DELETE CASCADE
);

#DROP SCHEMA Formula1;
